<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Mozilla Widgets.
   -
   - The Initial Developer of the Original Code is
   - Philippe Goetz.
   - Portions created by the Initial Developer are Copyright (C) 2004
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Philippe Goetz, Original author
   -   Daniel Glazman (daniel@glazman.org)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<bindings id="tipofthedayBindings"
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="tipoftheday">

    <implementation>
      <constructor>
        <![CDATA[
          if(!window._tipoftheday)
          {
            window._tipoftheday = this;
            // window.addEventListener("focus", this.launch, false);
          }
        ]]>
      </constructor>

      <field name="timeout">null</field>

      <method name="launch">
        <parameter name="event"/>
        <body>
          <![CDATA[
            // window.removeEventListener("focus", this.launch, false);
            // let the sidebar and the main window show up
            if (window._tipoftheday)
              this.timeout = setTimeout("if (window._tipoftheday) window._tipoftheday.open(false)", 500);
          ]]>
        </body>
      </method>

      <method name="open">
        <parameter name="forceOpen"/>
        <body>
          <![CDATA[
            if (this.timeout)
            {
              clearTimeout(this.timeout);
              this.timeout = null;
            }
            if (window._tipoftheday)
            {
              var tipoftheday = window._tipoftheday;
              delete window._tipoftheday;
              var repeat = tipoftheday.getAttribute("repeat");
              if (repeat)
              {
                var slices = repeat.split(",");
                if(slices[1])
                {
                  var stamp = parseInt(slices[1]);
                  stamp = ((new Date()).valueOf() - stamp) / 3600000;
                  switch(slices[0])
                  {
                    case "daily":
                      if(stamp < 1)
                        return;
                      break;
                    case "weekly":
                      if(stamp < 7)
                        return;
                      break;
                    default:
                      break;
                  }
                  slices[1] = (new Date()).valueOf();
                  tipoftheday.setAttribute("repeat", slices.join(","));
                }
              }
              tipoftheday.open();
            }
            else
            {
              var prefs = window.GetPrefs();
              var openOnStartup = prefs.getBoolPref("tipoftheday.openAtStartup");
              if (openOnStartup || forceOpen)
                openDialog("chrome://tipoftheday/content/tipoftheday.xul","_blank","chrome,modal,close=yes,dialog=no,resizable=yes",this);
            }
          ]]></body>
      </method>
    </implementation>
  </binding>
</bindings>
